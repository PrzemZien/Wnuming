clear all, clc

gdyby był sin(coś tam) to:
% x= linspace(0,10*pi,1000);
%f1 = @(x)(sin(x-pi/4)); % funkcja
%f1_deriv = @(x) (cos(x-pi/4)); 
%xi = fzero(f1,[0.5,1])*1.05;
%x_dokl = fzero(f1,[0.5,1]);


x = linspace(-10,10);
fx = @(x) x .* sinh(x-2) - 10;

for i=1:length(x)
    x0(i) = fzero(fx,x(i));
end
%teraz już wiem jakie są miejsca zerower tej funkcji
% czyli 3.7160
% -0.991

% a)

a = -10;
b = 12;
it = 0;
wartosc_prawdziwa = 3.7160;
blad = 1e-14;
xi = (a + b)/2;
blad_b  = abs(b - a);
while blad_b > blad
    xi = (a + b)/2;
    it = it + 1;
    if fx(a)*fx(xi) < 0
        b = xi;
    else
        a = xi;
    end
    xi_b(it) = xi;
    blad_b = abs(b - a);
    blad_bis = blad_b;
end

semilogy(blad_bis,'r');

% metoda Newtona
% gdyby było o 5% większa to xi = wartosc_prawdziwa * 1.05


x = linspace(-10,10);
fx = @(x) x .* sinh(x-2) - 10;
dfx = @(x) sinh(x-2) + x*cosh(x-2);

it = 0;
wartosc_prawdziwa = 3.7160;
blad = 1e-14;
xi = 0;
delta_x = abs(wartosc_prawdziwa - xi);
while delta_x > blad
    it = it + 1;
    xi_1 = xi - (fx(xi)/dfx(xi));
    xi_new(it) = xi_1;
    delta_x = abs(xi - xi_1);
    xi = xi_1;
    blad_N(it) = delta_x;
end

semilogy(blad_N,'g')

%metoda siecznych 

fx = @(x) x .* sinh(x-2) - 10;

dfx = @(x) sinh(x-2) - x*cosh(x-2);

blad = 1e-14;
wartosc_prawdziwa = 3.7160;
it = 0;
xi = 0;
xi_min = wartosc_prawdziwa;
deltax = abs(xi_min - xi);

while deltax > blad
    it = it + 1;
    xi_1 = xi - ((fx(xi)*(xi_min - xi))/(fx(xi_min)-fx(xi))*fx(xi));
    deltax = abs(xi - xi_min);
    x_min = xi;
    xi = xi_1;
    deltaxx(it) = deltax;
end

semilogy(deltaxx,'g')
